import pandas as pd

def create_lifecycle_grouped_features(ratio_type="net_new_mrr"):
    """
    Load performance tier features from pipeline results
    
    ratio_type: "net_new_mrr" or "new_mrr"
    - "net_new_mrr": Uses Net New MRR data for ratios (for Ending MRR models)
    - "new_mrr": Uses New MRR data for ratios (for Net New MRR models)
    """
    
    # Load performance tier data generated by the pipeline
    performance_tiers = ['high_performers', 'moderate_performers', 'underperformers']
    
    features = {}
    
    # Determine which column to use based on ratio_type
    column_name = "Net New MRR" if ratio_type == "net_new_mrr" else "New MRR"
    
    for tier in performance_tiers:
        file_path = f'output/{tier}/combined_results/baseline_combined_mrr_arpu_results.csv'
        try:
            tier_data = pd.read_csv(file_path)[:-1]  # Remove last row
            
            if ratio_type == "net_new_mrr":
                features[f'{tier}_net_new_mrr'] = tier_data["Net New MRR"]
            elif ratio_type == "new_mrr":
                features[f'{tier}_new_mrr'] = tier_data["New MRR"]
                
            print(f"✅ Loaded {tier} {column_name} data")
        except FileNotFoundError:
            print(f"⚠️  Warning: {tier} data not found, using zeros")
            
            if ratio_type == "net_new_mrr":
                features[f'{tier}_net_new_mrr'] = [0] * 62  # 62 months of zeros
            elif ratio_type == "new_mrr":
                features[f'{tier}_new_mrr'] = [0] * 62
    
    print(f"🎯 Performance tier features created ({ratio_type}):")
    for feature_name in features.keys():
        print(f"   - {feature_name}")
    
    return features